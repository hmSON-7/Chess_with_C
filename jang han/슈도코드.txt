1.게임 시작 메시지 출력 사용자에게 게임 시작 메시지를 출력
예: "WELCOME TO CHESS GAME", "Have fun playing", "by Han Seong" 등. 게임 시작을 알리는 화면을 출력하고 사용자 입력을 기다림 (getch() 사용)

2.체스판 초기 상태 출력 initialize_board 함수를 호출하여 초기 체스판 상태를 설정. 게임 시작 직후 체스판을 화면에 출력

3.게임 턴 관리 턴 수는 1부터 시작 (홀수 턴: 백 플레이어, 짝수 턴: 흑 플레이어) 게임이 진행되는 동안 turn 변수에 따라 플레이어가 번갈아 기물을 이동하도록 설정

4.반복 (게임이 끝날 때까지 계속) 게임 진행 루프: 화면 초기화 및 보드 출력
system("cls")로 화면을 지우고, display_board 함수를 통해 현재 체스판을 출력
현재 턴 수를 출력하여 누가 차례인지 명확히 표시
플레이어 턴 처리

백 플레이어 턴 (홀수 턴)
"백 팀의 기물 이동" 메시지를 출력
이동할 기물의 좌표 (x, y)를 입력받고, 기물이 해당 위치에 있는지 확인
그 기물이 이동할 수 있는 유효한 위치들을 display_valid_moves로 출력 (이동 가능한 좌표 표시)
목표 위치 (x, y)를 입력받고, 이동이 유효한지 move_piece 함수로 확인
이동이 유효하다면, 기물 이동과 해당 기물의 상태 업데이트 (보드 갱신)
유효하지 않으면 "유효하지 않은 이동입니다. 다시 시도하세요" 메시지 출력
흑 플레이어 턴 (짝수 턴)
"흑 팀의 기물 이동" 메시지를 출력
이동할 기물의 좌표 (x, y)를 입력받고, 기물이 해당 위치에 있는지 확인
그 기물이 이동할 수 있는 유효한 위치들을 display_valid_moves로 출력 (이동 가능한 좌표 표시)
목표 위치 (x, y)를 입력받고, 이동이 유효한지 move_piece 함수로 확인
이동이 유효하다면, 기물 이동과 해당 기물의 상태 업데이트 (보드 갱신)
유효하지 않으면 "유효하지 않은 이동입니다. 다시 시도하세요" 메시지 출력
게임 종료 조건 확인

매 턴마다 kingPos 배열을 사용하여 각 킹의 상태를 확인
백 킹 (kingPos[0])과 흑 킹 (kingPos[1])의 위치에서 해당 킹이 살아 있는지 확인
백 킹이 죽었으면: 흑 팀 승리 메시지 출력 후 게임 종료
흑 킹이 죽었으면: 백 팀 승리 메시지 출력 후 게임 종료
킹이 살아 있지 않으면 게임 종료
턴 수 증가

게임이 계속 진행되면 turn 변수의 값을 1 증가시켜 다음 플레이어로 전환
계속할지 여부 확인

getch()를 이용해 사용자 입력을 기다리며 "Press Enter to Continue!" 메시지를 출력
Enter 키가 눌리면 게임을 계속 진행
5. 게임 종료
게임 종료 메시지 출력
게임이 종료되면 승리한 팀의 메시지 출력
"백 팀이 졌습니다!" 또는 "흑 팀이 졌습니다!" 메시지 출력
게임 종료 후 프로그램을 종료